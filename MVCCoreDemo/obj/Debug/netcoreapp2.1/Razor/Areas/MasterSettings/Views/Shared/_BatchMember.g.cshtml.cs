#pragma checksum "C:\Users\vinay\source\repos\GymManagementSystem\MVCCoreDemo\Areas\MasterSettings\Views\Shared\_BatchMember.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "fdfbdb8659aeb391cfdd87db8b596b89a9dee06c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_MasterSettings_Views_Shared__BatchMember), @"mvc.1.0.view", @"/Areas/MasterSettings/Views/Shared/_BatchMember.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Areas/MasterSettings/Views/Shared/_BatchMember.cshtml", typeof(AspNetCore.Areas_MasterSettings_Views_Shared__BatchMember))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fdfbdb8659aeb391cfdd87db8b596b89a9dee06c", @"/Areas/MasterSettings/Views/Shared/_BatchMember.cshtml")]
    public class Areas_MasterSettings_Views_Shared__BatchMember : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/site.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/MasterSettings/BatchMember.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/site.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-append-version", new global::Microsoft.AspNetCore.Html.HtmlString("true"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/dist/plugins/moment/moment.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/dist/plugins/sweetalert2/sweetalert2.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 122, true);
            WriteLiteral("<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback\">\r\n");
            EndContext();
            BeginContext(122, 51, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "2e9ba97be409462aa6b8388cc598a216", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(173, 2343, true);
            WriteLiteral(@"
<style>
    .select2-dropdown.select2-dropdown--below {
        width: 350px !important;
    }

    .select2-container--default .select2-selection--single {
        padding: 0px;
        /* height: 37px; */
        width: 350px;
        font-size: 1.2em;
        position: relative;
    }

        .select2-container--default .select2-selection--single .select2-selection__arrow {
            background-image: -khtml-gradient(linear, left top, left bottom, from(#424242), to(#030303));
            background-image: -moz-linear-gradient(top, #424242, #030303);
            background-image: -ms-linear-gradient(top, #424242, #030303);
            background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%, #424242), color-stop(100%, #030303));
            background-image: -webkit-linear-gradient(top, #424242, #030303);
            background-image: -o-linear-gradient(top, #424242, #030303);
            background-image: linear-gradient(#424242, #030303);
            width:");
            WriteLiteral(@" 40px;
            color: #fff;
            font-size: 1.3em;
            padding: 4px 12px;
            height: 27px;
            position: absolute;
            top: 0px;
            right: 0px;
            width: 20px;
        }

</style>
<div class=""container mt-4"">
    <div class=""card"">
        <div class=""card-body"">
            <div class=""row"">
                <div class=""col-md-4""><button type=""button"" class=""btn btn-block bg-gradient-info btn-sm"" onclick=""OpenCreateBatch();"">Click to Create Batch</button></div>
            </div>
            <br />
            <table class=""table table-bordered table-striped table-hover dataTable"" id=""BatchMemberGrid"">
                <thead>
                    <tr class=""align-middle"">
                        <th style=""width:50px"">Action</th>
                        <th>Batch Member Id</th>
                        <th>Member</th>
                        <th>Batch</th>
                        <th>Start Date</th>
                        ");
            WriteLiteral(@"<th>End Date</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody class=""js-sweetalert""></tbody>
            </table>
            <input type=""hidden"" id=""hdnBatchId"" />
        </div>
    </div>
    <!-- /.modal -->

");
            EndContext();
            BeginContext(2578, 264, true);
            WriteLiteral(@"        <div class=""modal fade"" id=""MemberRegitrationModel"" tabindex=""-1"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
            <div class=""modal-dialog"">
                <div class=""modal-content"">
                    <div class=""modal-header"">
");
            EndContext();
            BeginContext(2926, 2915, true);
            WriteLiteral(@"                        <h4 class=""modal-title""><i class=""fa fa-pen""></i> Batch Member Registration</h4>
                        <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                            <span aria-hidden=""true"">&times;</span>
                        </button>
                    </div>
                    <div class=""modal-body"">
                        <div class=""mb-3"">
                            <label for=""memberSelection"" class=""form-label"">Member</label>
                            <select class=""form-control select2"" style=""width: 100%;"" id=""member"" name=""member""></select>
                        </div>
                        <div class=""mb-3"">
                            <label for=""batchSelection"" class=""form-label"">Batch</label>
                            <select class=""form-control select2"" style=""width: 100%;"" id=""batch"" name=""batch""></select>
                        </div>
                        <div class=""mb-3"">
                ");
            WriteLiteral(@"            <label for=""batchSelection"" class=""form-label"">Package</label>
                            <select class=""form-control select2"" style=""width: 100%;"" id=""package"" name=""package""></select>
                        </div>
                        <div class=""mb-3"">
                            <label for=""startDate"" class=""form-label"">Start Date</label>
                            <input type=""text"" class=""form-control"" id=""startdate"" name=""startdate"">
                        </div>
                        <div class=""mb-3"">
                            <label for=""endDate"" class=""form-label"">End Date</label>
                            <input type=""text"" class=""form-control"" id=""enddate"" name=""enddate"">
                        </div>
                        <div class=""mb-3"">
                            <label for=""NextFeesDate"" class=""form-label"">Next Fees Date</label>
                            <input type=""text"" class=""form-control"" id=""NextFeesDate"" name=""NextFeesDate"">
              ");
            WriteLiteral(@"          </div>
                        <div class=""mb-3"">
                            <input type=""checkbox"" value="""" id=""chkOnHold"">
                            <label class=""form-check-label"" for=""defaultCheck1"">
                                On Hold
                            </label>
                        </div>

                    </div>
                    <div class=""modal-footer justify-content-between"">
                        <button type=""button"" class=""btn btn-default"" data-dismiss=""modal"">Close</button>
                        <button type=""button"" class=""btn btn-primary"" onclick=""AddBatchMember();"">Save changes</button>
                    </div>
                </div>
                <!-- /.modal-content -->
            </div>
            <!-- /.modal-dialog -->
        </div>
        <!-- /.modal -->
    </div>
");
            EndContext();
            BeginContext(5841, 55, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "af36dd82b5a646cc9aa1195bf97977d8", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5896, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(5898, 66, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7c55c0d384d34748a56f07a07b37cc21", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5964, 3689, true);
            WriteLiteral(@"
<script>
    var Toast;
    var NoOfDays = 0;
    $(document).ready(function () {
        LoadMemberList();
        LoadBatchList();
        LoadPackageList();
        $('#startdate').daterangepicker({
            singleDatePicker: true,
            locale: {
                format: 'DD/MM/YYYY'           // Desired date format
            },
            maxYear: parseInt(moment().format('YYYY'), 10)
        }, function (start, end, label) {
            var selectedDate = start.toDate();

            // Define the number of business days to add (e.g., 14 days)
            var numberOfBusinessDaysToAdd = 30;
            numberOfBusinessDaysToAdd = BatchOnChange();
            // Calculate the new date based on business days
            var newDate = addBusinessDays(selectedDate, numberOfBusinessDaysToAdd);

            // Display the calculated date in the input field
            $('#enddate').val(moment(newDate).format('DD/MM/YYYY'));
            });
        $('#enddate').daterangep");
            WriteLiteral(@"icker({
            singleDatePicker: true,
            locale: {
                format: 'DD/MM/YYYY'           // Desired date format
            },
            maxYear: parseInt(moment().format('YYYY'), 10)
        }, function (start, end, label) {
            var years = moment().diff(start, 'years');
            //alert(""You are "" + years + "" years old!"");
            });
        $('#NextFeesDate').daterangepicker({
            singleDatePicker: true,
            locale: {
                format: 'DD/MM/YYYY'           // Desired date format
            },
            maxYear: parseInt(moment().format('YYYY'), 10)
        }, function (start, end, label) {
            var years = moment().diff(start, 'years');
            //alert(""You are "" + years + "" years old!"");
        });
        Toast = Swal.mixin({
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
            didOpen");
            WriteLiteral(@": (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer)
                toast.addEventListener('mouseleave', Swal.resumeTimer)
            }
        });
        document.getElementById(""contact"").addEventListener(""input"", function () {
            if (this.value.length > 3) {
                this.value = this.value.slice(0, 11);
            }
        });
    });

    $(function () {
        LoadBatchMemberList();
    });

    function addBusinessDays(startDate, numDays) {
        debugger;
        var currentDate = new Date(startDate);
        var addedDays = 0;

        while (addedDays < numDays) {
            currentDate.setDate(currentDate.getDate() + 1);

            // Check if the current day is a weekend (Saturday or Sunday)
            if (currentDate.getDay() !== 0 && currentDate.getDay() !== 6) {
                addedDays++;
            }
        }

        return currentDate;
    }
    function BatchOnChange() {
        var ddlId = $('#b");
            WriteLiteral(@"atch').val();

        _model = {
            ""BATCH_ID"": (ddlId == '-' ? '0' : ddlId) || (ddlId == '' ? '0' : ddlId) || (ddlId == undefined ? '0' : ddlId) || (ddlId == 'undefined' ? '0' : ddlId),
        }

        $.ajax({
            type: ""POST"",
            url: ""MasterSetting/GetBatchNoOfDays"",
            dataType: 'json',
            async: false,
            data: {
                model: _model
            },
            success: function (response) {
                debugger;
                NoOfDays = response
            }
        });
        return NoOfDays;
    }
</script>
");
            EndContext();
            BeginContext(9653, 59, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2ac45339fc0b426380b117f41d401a2f", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(9712, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(9714, 65, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9a17c37b235e4d47896bb478c8d43858", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
